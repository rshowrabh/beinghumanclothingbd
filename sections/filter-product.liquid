{%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: calc({{ section.settings.padding_top }}px * 0.75);
      padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
    }
  
    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
{%- endstyle -%}
<style>
    .product_list{
      flex-wrap:wrap;
    }
    #filter_product .slick-arrow {
      transform: translateY(-100%);
      background: #14261c;
    }
    .controls{
        display:flex;
        justify-content:center;
        align-items:center;
        margin-bottom: 10px;
        cursor: pointer;
    }
    .controls .control{
        padding:10px 50px;
        display: inline-block;
        color:#fff;
        background:#54595f;
    }
    #filter_product .heading{
      font-size: 28px;
      text-transform: uppercase;
      line-height: 1.3em;
      text-align: center;
      color: #14261C;
    }
    .control.selected{
      background: #000;
    }
    .collection-list__item{
      padding: 0px 10px;
    }
</style>

  <div id="filter_product" class="color-{{ section.settings.color_scheme }} gradient isolate">
    <div class="section-{{ section.id }}-padding">
      <h1 class="heading">{{section.settings.heading}}</h1>
        <div class="controls">
            {%- for block in section.blocks -%}
            <span class="control {% if forloop.first %} selected {% endif %}" data-filter="{{  block.id }}"> {{block.settings.title}}</span>
            {% endfor %}
        </div>
        <div class="product_list">
        {%- for block in section.blocks -%}
            {% for product in block.settings.collection.products %}
              <p>{{block.settings.collection}}</p>
            <div class="slick-slide {{block.id}} collection-list__item grid__item" data-category="{{block.id}}">
                {% render 'card-product',
                card_product: product
          %}
          </div>
          {%- endfor -%}
          {%- endfor -%}
          </div>
    </div>
  </div>
  {% comment %} 
  <script src="{{ 'mixitup.min.js' | asset_url }}"></script>
  <script>
   var mixer = mixitup('.product_list', {
    load: {
    		  filter: ".{{section.blocks.first.id}}"
    		}   
      });
   </script>
 {% endcomment %}


{% comment %} <script>
     $(document).ready(function(){
        // Initialize the Slick Slider
        var $slider = $('.product_list').slick({
        speed:800,
        infinite: false,
        slidesToShow: 3,
        slidesToScroll: 1,
        autoplay: false,
        autoplaySpeed: 4000,
        arrows:true,
        dots:false,
        prevArrow:"<span type='button' class='arrow-prev'><img src='"+ arrow +"' alt='arrow'></span>",
        nextArrow:"<span type='button' class='arrow-next'><img src='"+ arrow +"' alt='arrow'></span>",
            responsive: [
                {
                    breakpoint: 768,
                    settings: {
                        slidesToShow: 2,
                        slidesToScroll: 1
                    }
                },
                {
                    breakpoint: 480,
                    settings: {
                        slidesToShow: 1,
                        slidesToScroll: 1
                    }
                }
            ]
        });
        // Auto-select the first filter and filter the slides
        var $firstFilter = $('.controls .control.selected');
        $slider.slick('slickFilter', function(){
            return $(this).data('category') === $firstFilter.data('filter');
        });
     
        // Filter function for Slick Slider
         $('.controls .control').on('click', function(){
            var filterValue = $(this).attr('data-filter');
                // Remove the selected class from all buttons and add to the clicked one
                $('.controls .control').removeClass('selected');
                $(this).addClass('selected');
                // Filter slides based on data-category attribute
                $slider.slick('slickUnfilter').slick('slickFilter', function(){
                    return $(this).data('category') === filterValue;
                });
        });
    });
</script> {% endcomment %}

  {% schema %}
  {
    "name": "Filter Product",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "Heading",
        "default": "All Thats New"
      },
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "scheme-1"
      },
      {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 40
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 52
      },
      {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.main-list-collections.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-list-collections.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-list-collections.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "2",
      "label": "t:sections.main-list-collections.settings.columns_mobile.label"
    }
    ],
    
"blocks": [
    {
    "type": "column",
    "name": "Add Blocks",
    "settings": [
          {
          "type": "text",
          "id": "title",
          "label": "Tab Name",
          "default": "Men"
          },
          {
          "type": "product_list",
          "id": "collection",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
          }
  ]
 }
],
    "presets": [
      {
        "name": "Filter Product"
      }
    ]
  }
  {% endschema %}
  