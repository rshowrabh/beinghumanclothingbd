<style>
  html,
body {
    height: 100%;
    background: #f2f2f2;
}

*,
*:before,
*:after {
    box-sizing: border-box;
}

/* Controls
---------------------------------------------------------------------- */

.controls {
    padding: 1rem;
    background: #333;
    font-size: 0.1px;
}

.control {
    position: relative;
    display: inline-block;
    width: 2.7rem;
    height: 2.7rem;
    background: #444;
    cursor: pointer;
    font-size: 0.1px;
    color: white;
    transition: background 150ms;
}

.control:hover {
    background: #3f3f3f;
}

.control[data-sort]:after {
    content: '';
    position: absolute;
    width: 10px;
    height: 10px;
    border-top: 2px solid;
    border-left: 2px solid;
    top: calc(50% - 6px);
    left: calc(50% - 6px);
    transform:  translateY(1px) rotate(45deg);
}

.control[data-sort*=":desc"]:after {
    transform:  translateY(-4px) rotate(-135deg);
}

.mixitup-control-active {
    background: #393939;
}

.mixitup-control-active[data-filter]:after {
    background: transparent;
}

.control:first-of-type {
    border-radius: 3px 0 0 3px;
}

.control:last-of-type {
    border-radius: 0 3px 3px 0;
}

/* Container
---------------------------------------------------------------------- */

.container {
    padding: 1rem;
    text-align: justify;
    font-size: 0.1px;
}

.container:after {
    content: '';
    display: inline-block;
    width: 100%;
}

/* Target Elements
---------------------------------------------------------------------- */

.mix,
.gap {
    display: inline-block;
    vertical-align: top;
}

.mix {
    background: #fff;
    border-radius: 2px;
    margin-bottom: 1rem;
    position: relative;
    font-family: 'helvetica-neue', arial, sans-serif;
}

.mix:before {
    content: '';
    display: inline-block;
    padding-top: 56.25%;
}

/* Grid Breakpoints
---------------------------------------------------------------------- */

/* 2 Columns */

.mix,
.gap {
    width: calc(100%/2 - (((2 - 1) * 1rem) / 2));
}

/* 3 Columns */

@media screen and (min-width: 541px) {
    .mix,
    .gap {
        width: calc(100%/3 - (((3 - 1) * 1rem) / 3));
    }
}

/* 4 Columns */

@media screen and (min-width: 961px) {
    .mix,
    .gap {
        width: calc(100%/4 - (((4 - 1) * 1rem) / 4));
    }
}

/* 5 Columns */

@media screen and (min-width: 1281px) {
    .mix,
    .gap {
        width: calc(100%/5 - (((5 - 1) * 1rem) / 5));
    }
}



</style>

{%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: calc({{ section.settings.padding_top }}px * 0.75);
      padding-bottom: calc({{ section.settings.padding_bottom }}px  * 0.75);
    }

    .mixitup-control-active{
      background: #000 !important;
    }
    .collection_list{
      overflow:hidden;
    }
    .mix{
      width: calc(33%)
    }

    .heading{
        height:100px;
        width:100%;
        display:flex;
        justify-content:center;
        align-items:center;
    }
    .heading span{
        padding:10px 50px;
        display: inline-block;
        color:#fff;
        background:#54595f;
    }
  
    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}
  <div class="color-{{ section.settings.color_scheme }} gradient isolate">
    <div class="section-{{ section.id }}-padding page-width">
        <div class="heading controls">
            {%- for block in section.blocks -%}
            <span class="control"  data-filter=".{{  block.id }}">{{block.settings.title}}</span>
            {% endfor %}
        </div>
        <div class="collection_list d-flex">
        {%- for block in section.blocks -%}
            {% for collection in block.settings.collection %}
            <div class="mix {{block.id}} collection-list__item grid__item">
                {% render 'card-collection',
                card_collection: collection,
                columns: 3
        %}
          </div>
          {%- endfor -%}
          {%- endfor -%}
          </div>
    </div>
  </div>
  <script src="{{ 'mixitup.min.js' | asset_url }}"></script>
  <script>
   var mixer = mixitup('.collection_list', {
    controls: {
        toggleDefault: '.man'
    }
});
</script>
  {% schema %}
  {
    "name": "Filter Collections",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "color_scheme",
        "id": "color_scheme",
        "label": "t:sections.all.colors.label",
        "default": "scheme-1"
      },
      {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_top",
        "default": 40
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "t:sections.all.padding.padding_bottom",
        "default": 52
      }
    ],
    
"blocks": [
    {
    "type": "column",
    "name": "Add Blocks",
    "settings": [
          {
          "type": "text",
          "id": "title",
          "label": "Tab Name",
          "default": "Men"
          },
          {
          "type": "collection_list",
          "id": "collection",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
          }
  ]
 }
],
    "presets": [
      {
        "name": "Filter Collections"
      }
    ]
  }
  {% endschema %}
  